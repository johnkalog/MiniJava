//
// Generated by JTB 1.3.2 DIT@UoA patched
//

options {
   JAVA_UNICODE_ESCAPE = true;
}

PARSER_BEGIN(TernParser)
import syntaxtree.*;
import java.util.Vector;


public class TernParser 
{
}

class JTBToolkit {
   static NodeToken makeNodeToken(Token t) {
      return new NodeToken(t.image.intern(), t.kind, t.beginLine, t.beginColumn, t.endLine, t.endColumn);
   }
}


PARSER_END(TernParser)

SKIP :
{
   " "
   | "\t"
   | "\r"
   | "\f"
   | "\n"
}

TOKEN :
{
   <QM: "?">
   | <QOLON: ":">
}

TOKEN :
{
   <NUMBER: ["0"-"9"]>
}

Tern Tern() :
{
   NodeToken n0;
   Token n1;
   NodeOptional n2 = new NodeOptional();
   TernTail n3;

   
}
{
   n1=<NUMBER> { n0 = JTBToolkit.makeNodeToken(n1); }
   (
      n3=TernTail()
      { n2.addNode(n3); }
   )?
   
   { return new Tern(n0,n2); }
}

TernTail TernTail() :
{
   NodeToken n0;
   Token n1;
   Tern n2;
   NodeToken n3;
   Token n4;
   Tern n5;

   
}
{
   n1="?" { n0 = JTBToolkit.makeNodeToken(n1); }
   n2=Tern()
   n4=":" { n3 = JTBToolkit.makeNodeToken(n4); }
   n5=Tern()
   
   { return new TernTail(n0,n2,n3,n5); }
}
